<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Articles on Hack Me Daddy</title>
    <link>http://localhost:1313/articles/</link>
    <description>Recent content in Articles on Hack Me Daddy</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 05 Nov 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/articles/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Understanding CVE-2023-28252: Deep Dive into the CLFS Privilege Escalation Vulnerability</title>
      <link>http://localhost:1313/articles/understanding2023-28252-clfs/</link>
      <pubDate>Tue, 05 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/articles/understanding2023-28252-clfs/</guid>
      <description>&lt;h2 id=&#34;understanding-cve-2023-28252-a-deep-dive-into-clfs-privilege-escalation&#34;&gt;Understanding CVE-2023-28252: A Deep Dive into CLFS Privilege Escalation&lt;/h2&gt;&#xA;&lt;p&gt;CVE-2023-28252 represents a critical vulnerability in Microsoft&amp;rsquo;s Common Log File System (CLFS) that allows local privilege escalation to SYSTEM.&lt;/p&gt;&#xA;&lt;h3 id=&#34;what-is-clfs&#34;&gt;What is CLFS?&lt;/h3&gt;&#xA;&lt;p&gt;The Common Log File System (CLFS) is a logging subsystem introduced in Windows Server 2003 R2. Unlike traditional logging systems, CLFS provides:&lt;/p&gt;&#xA;&lt;h4 id=&#34;component-overview&#34;&gt;Component Overview&lt;/h4&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;codeblock&#34;&gt;&#xA;    &#xA;        &lt;div class=&#34;copy-button-box&#34;&gt;&#xA;            &lt;button class=&#34;copy-button&#34; state=&#34;copy&#34; data=&#34;#ZgotmplZ&#34;&gt;&#xA;                &lt;i class=&#34;bi bi-copy&#34;&gt;&lt;/i&gt;&#xA;            &lt;/button&gt;&#xA;        &lt;/div&gt;&#xA;    &#xA;&#xA;    &#xA;        &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CLFS Architecture:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── Log Container&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── Base Log File (.blf)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   └── Container Files (.clf)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── Stream Management&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── Virtual Log Files&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   └── Log Blocks&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;└── Client Interface&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ├── User Mode API&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    └── Kernel Mode API&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;    &#xA;&lt;/div&gt;&#xA;&lt;h4 id=&#34;key-features&#34;&gt;Key Features&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Transactional logging with ACID properties&lt;/li&gt;&#xA;&lt;li&gt;High-performance sequential I/O operations&lt;/li&gt;&#xA;&lt;li&gt;Crash recovery capabilities&lt;/li&gt;&#xA;&lt;li&gt;Structured storage for log records&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;technical-deep-dive&#34;&gt;Technical Deep Dive&lt;/h3&gt;&#xA;&lt;h4 id=&#34;vulnerability-details&#34;&gt;Vulnerability Details&lt;/h4&gt;&#xA;&lt;p&gt;The vulnerability exists in the CLFS driver (CLFS.SYS) and involves:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Understanding CVE-2023-38146: Deep Dive into the ThemeBleed Vulnerability</title>
      <link>http://localhost:1313/articles/understandingthemebleedcve-2023-38146/</link>
      <pubDate>Tue, 05 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/articles/understandingthemebleedcve-2023-38146/</guid>
      <description>&lt;h2 id=&#34;understanding-cve-2023-38146-themebleed-windows-vulnerability&#34;&gt;Understanding CVE-2023-38146: ThemeBleed Windows Vulnerability:&lt;/h2&gt;&#xA;&lt;p&gt;ThemeBleed (CVE-2023-38146) represents a critical vulnerability in Windows Theme Feature that allows local privilege escalation through improper handling of theme binary data.&lt;/p&gt;&#xA;&lt;h3 id=&#34;what-is-themebleed&#34;&gt;What is ThemeBleed?&lt;/h3&gt;&#xA;&lt;p&gt;ThemeBleed is a security vulnerability in the Windows Theme Binary Data feature where improper handling of theme files can lead to:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Local privilege escalation&lt;/li&gt;&#xA;&lt;li&gt;Arbitrary file read&lt;/li&gt;&#xA;&lt;li&gt;Potential system compromise&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;technical-deep-dive&#34;&gt;Technical Deep Dive:&lt;/h3&gt;&#xA;&lt;h4 id=&#34;component-overview&#34;&gt;Component Overview:&lt;/h4&gt;&#xA;&lt;p&gt;The vulnerability exists in several key Windows components:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Understanding the CUPS Exploit Chain: A Deep Dive into CVE-2024-4176, CVE-2024-4175, CVE-2024-4177 and CVE-2024-4076</title>
      <link>http://localhost:1313/articles/understandingcupsexploitation/</link>
      <pubDate>Tue, 22 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/articles/understandingcupsexploitation/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;The Common UNIX Printing System (CUPS) is a crucial component in many Unix-like operating systems, including Linux and macOS. Recent discoveries have revealed significant vulnerabilities in CUPS, potentially exposing systems to serious security risks. This post will explore these vulnerabilities and demonstrate how they can be exploited.&lt;/p&gt;&#xA;&lt;h2 id=&#34;cups-ipp-and-ppd-a-primer&#34;&gt;CUPS, IPP &amp;amp; PPD: A Primer&lt;/h2&gt;&#xA;&lt;h3 id=&#34;common-unix-printing-system--cups--primer&#34;&gt;Common UNIX Printing System (CUPS) Primer:&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;What is CUPS?&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;CUPS (Common UNIX Printing System) is an open-source printing system developed by Apple for macOS, Linux, and other UNIX-like operating systems.&lt;/li&gt;&#xA;&lt;li&gt;It allows a computer to act as a print server, enabling clients to send print jobs to printers using Internet Printing Protocol (IPP) and other protocols.&lt;/li&gt;&#xA;&lt;li&gt;Supports printing to both local and network printers, handling print queues and printer management.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Key Features of CUPS&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Understanding the NoPac Exploit: A Deep Dive into CVE-2021-42278 and CVE-2021-42287</title>
      <link>http://localhost:1313/articles/understandingnopacexploit/</link>
      <pubDate>Mon, 21 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/articles/understandingnopacexploit/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction:&lt;/h2&gt;&#xA;&lt;p&gt;In late 2021 the &amp;ldquo;NoPac&amp;rdquo; exploit leveraged two critical vulnerabilities in Microsoft&amp;rsquo;s Active Directory, potentially allowing an attacker to escalate from a standard user account to domain administrator privileges with alarming ease.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Key Points&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;NoPac exploits two vulnerabilities: CVE-2021-42278 and CVE-2021-42287&lt;/li&gt;&#xA;&lt;li&gt;It allows privilege escalation from a standard user to domain admin&lt;/li&gt;&#xA;&lt;li&gt;Understanding this exploit is crucial for system administrators and security professionals&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s delve into the intricacies of NoPac, exploring the underlying vulnerabilities, mechanics, and the significant threat it posed to organizational security.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Understanding SeLoadDriverPrivilege Escalation: A Deep Dive</title>
      <link>http://localhost:1313/articles/seloaddriverprivilegeescalation/</link>
      <pubDate>Sun, 20 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/articles/seloaddriverprivilegeescalation/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction:&lt;/h2&gt;&#xA;&lt;p&gt;Among the various techniques employed by attackers, one particularly insidious method involves the exploitation of &lt;code&gt;SeLoadDriverPrivilege&lt;/code&gt;. This Windows privilege, often overlooked, can serve as a powerful tool in the hands of malicious actors, enabling them to &lt;strong&gt;elevate their permissions&lt;/strong&gt; and potentially &lt;strong&gt;gain complete control over a system&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Key Points&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;SeLoadDriverPrivilege&lt;/code&gt; is a Windows privilege that can be exploited for privilege escalation&lt;/li&gt;&#xA;&lt;li&gt;It&amp;rsquo;s often overlooked but can grant attackers significant control over a system&lt;/li&gt;&#xA;&lt;li&gt;Understanding this vulnerability is crucial for system administrators and security professionals&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s dive into the world of &lt;code&gt;SeLoadDriverPrivilege&lt;/code&gt; and explore how this seemingly innocuous privilege can become a significant security risk.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Understanding Azure AD Connect Exploitation &amp; Privilege Escalation</title>
      <link>http://localhost:1313/articles/azureadconnectattack/</link>
      <pubDate>Mon, 14 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/articles/azureadconnectattack/</guid>
      <description>&lt;h2 id=&#34;used-for-connecting-on-premises-ad-instances-with-azure-cloud-instances&#34;&gt;Used-For: Connecting on-premises AD instances with Azure cloud instances&lt;/h2&gt;&#xA;&lt;h2 id=&#34;overview&#34;&gt;Overview:&lt;/h2&gt;&#xA;&lt;p&gt;Azure AD Connect is a Microsoft tool designed to bridge on-premises Active Directory (AD) with Azure AD in the cloud. It offers several synchronization methods:&lt;/p&gt;&#xA;&lt;h3 id=&#34;pass-through-authentication--pta&#34;&gt;Pass-through Authentication (PTA):&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Validates users&amp;rsquo; passwords directly against on-premises AD&lt;/li&gt;&#xA;&lt;li&gt;Enables enforcement of on-premises security and password policies&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;federated-authentication--adfs&#34;&gt;Federated Authentication (ADFS):&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Uses a separate federated authentication system like AD FS&lt;/li&gt;&#xA;&lt;li&gt;Provides advanced capabilities like multi-factor authentication and third-party MFA integration&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;password-hash-synchronization--phs&#34;&gt;Password Hash Synchronization (PHS):&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Synchronizes a hash of the hash of users&amp;rsquo; passwords from on-premises AD to Azure AD&lt;/li&gt;&#xA;&lt;li&gt;Allows for cloud-based authentication without on-premises infrastructure dependency&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;password-hash-synchronization--phs--method&#34;&gt;Password Hash Synchronization (PHS) Method:&lt;/h3&gt;&#xA;&lt;p&gt;Here&amp;rsquo;s a simplified diagram illustrating the Password Hash Synchronization (PHS) method:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Understanding the Shadow Credentials Attack Vector</title>
      <link>http://localhost:1313/articles/shadowcredentialsattack/</link>
      <pubDate>Fri, 11 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/articles/shadowcredentialsattack/</guid>
      <description>&lt;h2 id=&#34;understanding-the-shadow-credentials-attack-vector&#34;&gt;Understanding the Shadow Credentials Attack Vector:&lt;/h2&gt;&#xA;&lt;p&gt;The Shadow Credentials attack is an advanced technique that exploits Active Directory&amp;rsquo;s certificate-based authentication mechanism to compromise user accounts without changing their passwords. This attack leverages the &lt;code&gt;msDS-KeyCredentialLink&lt;/code&gt; attribute to add a malicious certificate, allowing an attacker to impersonate the target user stealthily.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;To put it simply&lt;/strong&gt;: If we have the &lt;code&gt;WriteProperty&lt;/code&gt; privilege (specifically for the &lt;code&gt;msDS-KeyCredentialLink&lt;/code&gt; attribute) over a user or computer object, we can set Shadow Credentials for that object and authenticate as them. You read that right, we can add a certificate-based credential to a user or computer and then authenticate as them. We can also request a &lt;code&gt;Kerberos&lt;/code&gt; ticket and use it for pass-the-ticket attacks if needed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Understanding .NET Deserialization Exploits: A Deep Dive</title>
      <link>http://localhost:1313/articles/deserializationattacksexplained/</link>
      <pubDate>Thu, 10 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/articles/deserializationattacksexplained/</guid>
      <description>&lt;h2 id=&#34;understanding-dot-net-deserialization-exploits-a-deep-dive&#34;&gt;Understanding &lt;code&gt;.NET&lt;/code&gt; Deserialization Exploits: A Deep Dive:&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;.NET&lt;/code&gt; deserialization exploits have become a common technique; providing a pathway to remote code execution (RCE) on vulnerable systems. Tools like &lt;a href=&#34;https://github.com/pwntester/ysoserial.net&#34;&gt;ysoserial.net&lt;/a&gt; can generate malicious payloads, allowing attackers to exploit deserialization flaws in .NET applications. But how does this attack vector actually work, and why does it succeed?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;In this post, we&amp;rsquo;ll walk through the underlying mechanics, focusing on an example using &lt;code&gt;BinaryFormatter&lt;/code&gt; with a simple &lt;code&gt;Student&lt;/code&gt; class. We&amp;rsquo;ll see how a seemingly innocuous application can be vulnerable to severe attacks.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
