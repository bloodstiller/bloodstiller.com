<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Redteam on Hack Me Daddy</title>
    <link>http://localhost:1313/tags/redteam/</link>
    <description>Recent content in Redteam on Hack Me Daddy</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 11 Mar 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/redteam/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker Image Security Analysis and Testing</title>
      <link>http://localhost:1313/cheatsheets/dockerimagesecurityanalysis/</link>
      <pubDate>Tue, 11 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/cheatsheets/dockerimagesecurityanalysis/</guid>
      <description>&lt;h2 id=&#34;docker-image-security-analysis-and-testing&#34;&gt;Docker Image Security Analysis and Testing&lt;/h2&gt;&#xA;&lt;p&gt;When performing security assessments of Docker containers, having local access to container images provides significant advantages. This guide focuses on the security analysis and testing aspects of Docker containers, showing you how to perform thorough security assessments of container images.&lt;/p&gt;&#xA;&lt;h3 id=&#34;why-perform-local-security-analysis&#34;&gt;Why Perform Local Security Analysis?&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;Comprehensive security testing&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Local access enables thorough security testing without network constraints or external dependencies. This is crucial when performing detailed vulnerability assessments or penetration testing of container images.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;Forensic analysis capabilities&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Emulate Different Architectures in Docker</title>
      <link>http://localhost:1313/cheatsheets/howtoemulatedifferentarchitecturesindocker/</link>
      <pubDate>Tue, 11 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/cheatsheets/howtoemulatedifferentarchitecturesindocker/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;When conducting security assessments or penetration tests involving containers, you&amp;rsquo;ll often encounter images built for different CPU architectures. For example, you might need to analyze an ARM64 container on your x86_64 laptop, or test an old x86 container on modern ARM-based hardware. This guide covers various methods to handle cross-architecture container analysis.&lt;/p&gt;&#xA;&lt;h2 id=&#34;understanding-architecture-emulation-in-docker&#34;&gt;Understanding Architecture Emulation in Docker&lt;/h2&gt;&#xA;&lt;p&gt;Docker uses QEMU under the hood to enable cross-architecture support. QEMU is a generic machine emulator and virtualizer that allows running binaries built for one CPU architecture on a different one.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
