<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Redteam on Hack Me Daddy</title>
    <link>http://localhost:1313/tags/redteam/</link>
    <description>Recent content in Redteam on Hack Me Daddy</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 11 Mar 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/redteam/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to Emulate Different Architectures in Docker</title>
      <link>http://localhost:1313/cheatsheets/howtoemulatedifferentarchitecturesindocker/</link>
      <pubDate>Tue, 11 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/cheatsheets/howtoemulatedifferentarchitecturesindocker/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;When conducting security assessments or penetration tests involving containers, you&amp;rsquo;ll often encounter images built for different CPU architectures. For example, you might need to analyze an ARM64 container on your x86_64 laptop, or test an old x86 container on modern ARM-based hardware. This guide covers various methods to handle cross-architecture container analysis.&lt;/p&gt;&#xA;&lt;h2 id=&#34;understanding-architecture-emulation-in-docker&#34;&gt;Understanding Architecture Emulation in Docker&lt;/h2&gt;&#xA;&lt;p&gt;Docker uses QEMU under the hood to enable cross-architecture support. QEMU is a generic machine emulator and virtualizer that allows running binaries built for one CPU architecture on a different one.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Transferring Docker Images via SCP</title>
      <link>http://localhost:1313/cheatsheets/transferringdockerimagesviascp/</link>
      <pubDate>Tue, 11 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/cheatsheets/transferringdockerimagesviascp/</guid>
      <description>&lt;h2 id=&#34;transferring-docker-images-for-security-assessment&#34;&gt;Transferring Docker Images for Security Assessment&lt;/h2&gt;&#xA;&lt;p&gt;When working with Docker containers in security testing scenarios, having local access to container images provides significant advantages. Recently I had to test some containers but did not have direct access to the private registry, however I did have access to a host that had the images on them. In order to make testing easier (and with permission) I transferred the images locally so I could test. This guide shows how to securely transfer Docker images between hosts for local analysis and pentesting as well as shows some basic testing.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
