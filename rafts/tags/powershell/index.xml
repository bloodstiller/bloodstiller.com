<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PowerShell on Hack Me Daddy</title>
    <link>http://localhost:1313/tags/powershell/</link>
    <description>Recent content in PowerShell on Hack Me Daddy</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 11 Nov 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/powershell/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Understanding PowerShell Download Cradles: A Deep Dive</title>
      <link>http://localhost:1313/articles/understandingdownloadcradles/</link>
      <pubDate>Mon, 11 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/articles/understandingdownloadcradles/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;PowerShell has revolutionized system administration and automation. One of its powerful yet often misunderstood features is the PowerShell download cradle. This article explores what download cradles are, their uses, and best practices for implementation.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-a-powershell-download-cradle&#34;&gt;What is a PowerShell Download Cradle?&lt;/h2&gt;&#xA;&lt;p&gt;A PowerShell download cradle is a technique that enables downloading and executing code directly in memory without writing to disk. This approach can help bypass security mechanisms.&lt;/p&gt;&#xA;&lt;h2 id=&#34;core-components-and-techniques&#34;&gt;Core Components and Techniques&lt;/h2&gt;&#xA;&lt;h3 id=&#34;essential-cmdlets&#34;&gt;Essential Cmdlets&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;Invoke-WebRequest&lt;/code&gt;: Retrieves content from web pages&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Invoke-Expression&lt;/code&gt; (alias: IEX): Executes PowerShell commands from strings&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;System.Net.WebClient&lt;/code&gt;: .NET class for web server interactions&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;basic-syntax-example-using-invoke-mimikatz&#34;&gt;Basic Syntax Example using Invoke-Mimikatz:&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Load Script into memory&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
