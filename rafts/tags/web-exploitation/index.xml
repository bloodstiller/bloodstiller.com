<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web Exploitation on Bloodstiller: Ethical Hacking &amp; Active Directory Security Blog</title>
    <link>http://localhost:1313/tags/web-exploitation/</link>
    <description>Recent content in Web Exploitation on Bloodstiller: Ethical Hacking &amp; Active Directory Security Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 03 Oct 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/web-exploitation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DOM XSS Lab 5: jQuery :contains() selector sink with location.hash source</title>
      <link>http://localhost:1313/portswigger/dom_xss_lab_5/</link>
      <pubDate>Fri, 03 Oct 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/portswigger/dom_xss_lab_5/</guid>
      <description>&lt;h2 id=&#34;lab-5-dom-xss-in-jquery-selector-sink-using-a-hashchange-event&#34;&gt;Lab 5: DOM XSS in jQuery selector sink using a hashchange event:&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;This lab contains a DOM-based cross-site scripting vulnerability on the home page. It uses jQuery&amp;rsquo;s &lt;code&gt;$()&lt;/code&gt; selector function to auto-scroll to a given post, whose title is passed via the &lt;code&gt;location.hash&lt;/code&gt; property.&lt;/p&gt;&#xA;&lt;p&gt;To solve the lab, deliver an exploit to the victim that calls the &lt;code&gt;print()&lt;/code&gt; function in their browser.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;initial-reconnaissance-discovery&#34;&gt;Initial Reconnaissance/Discovery:&lt;/h3&gt;&#xA;&lt;p&gt;Navigating to the page we can see it&amp;rsquo;s a blog that has various posts.&#xA;&lt;p class=&#34;imgp&#34;&gt;&#xA;  &lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:1313/ox-hugo/2025-10-03-100826.png&#34; alt=&#34;&#34;  /&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>DOM XSS Lab 4: jQuery anchor href sink with location.search source</title>
      <link>http://localhost:1313/portswigger/dom_xss_lab_4/</link>
      <pubDate>Wed, 01 Oct 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/portswigger/dom_xss_lab_4/</guid>
      <description>&lt;h2 id=&#34;lab-4-dom-xss-in-jquery-anchor-href-attribute-sink-using-location-dot-search-source&#34;&gt;Lab 4: DOM XSS in jQuery anchor &lt;code&gt;href&lt;/code&gt; attribute sink using &lt;code&gt;location.search&lt;/code&gt; source:&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;This lab contains a DOM-based cross-site scripting vulnerability in the submit feedback page. It uses the jQuery library&amp;rsquo;s &lt;code&gt;$&lt;/code&gt; selector function to find an anchor element, and changes its &lt;code&gt;href&lt;/code&gt; attribute using data from &lt;code&gt;location.search&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;To solve this lab, make the &amp;ldquo;back&amp;rdquo; link alert &lt;code&gt;document.cookie&lt;/code&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;initial-reconnaissance-discovery&#34;&gt;Initial Reconnaissance/Discovery:&lt;/h3&gt;&#xA;&lt;h4 id=&#34;mapping-the-comments-section&#34;&gt;Mapping The Comments Section:&lt;/h4&gt;&#xA;&lt;p&gt;Looking at a post we can see we can add comments &amp;amp; leave our name, email &amp;amp; website.&#xA;&lt;p class=&#34;imgp&#34;&gt;&#xA;  &lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:1313/ox-hugo/2025-09-30-153613.png&#34; alt=&#34;&#34;  /&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>DOM XSS Lab 3: Exploiting innerHTML with location.search in the Search Message</title>
      <link>http://localhost:1313/portswigger/dom_xss_lab_3/</link>
      <pubDate>Tue, 30 Sep 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/portswigger/dom_xss_lab_3/</guid>
      <description>&lt;h2 id=&#34;lab-3-dom-xss-in-innerhtml-sink-using-source-location-dot-search&#34;&gt;Lab 3: DOM XSS in &lt;code&gt;innerHTML&lt;/code&gt; sink using source &lt;code&gt;location.search&lt;/code&gt;&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;This lab contains a DOM-based cross-site scripting vulnerability in the blog search. It takes data from &lt;code&gt;location.search&lt;/code&gt; and writes it into the page via &lt;code&gt;innerHTML&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;To solve the lab, perform a cross-site scripting attack that calls &lt;code&gt;alert&lt;/code&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Pre-amble, before the link to the lab. There is this text below, which tells essentially what we need to do and what will or won&amp;rsquo;t work.&lt;/p&gt;</description>
    </item>
    <item>
      <title>DOM XSS Lab 2: Exploiting document.write with location.search in Select Elements</title>
      <link>http://localhost:1313/portswigger/dom_xss_lab_2/</link>
      <pubDate>Mon, 29 Sep 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/portswigger/dom_xss_lab_2/</guid>
      <description>&lt;h2 id=&#34;lab-2-dom-xss-in-document-dot-write-sink-using-source-location-dot-search-inside-a-select-element&#34;&gt;Lab 2: DOM XSS in &lt;code&gt;document.write&lt;/code&gt; sink using source &lt;code&gt;location.search&lt;/code&gt; inside a &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; element:&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;This lab contains a DOM-based cross-site scripting vulnerability in the stock checker. It uses the JavaScript &lt;code&gt;document.write&lt;/code&gt; function, which writes raw HTML into the page. The function is called with data from &lt;code&gt;location.search&lt;/code&gt; (the URL query string), which you control. The data is inserted inside a &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; element.&lt;/p&gt;&#xA;&lt;p&gt;To solve this lab, perform a cross-site scripting attack that breaks out of the &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; element and calls &lt;code&gt;alert&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Strutted HTB Walkthrough: Apache Struts2 CVE-2024-53677 File Upload Exploitation</title>
      <link>http://localhost:1313/walkthroughs/strutted-box/</link>
      <pubDate>Mon, 02 Jun 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/walkthroughs/strutted-box/</guid>
      <description>&lt;h2 id=&#34;strutted-hack-the-box-walkthrough-writeup&#34;&gt;Strutted Hack The Box Walkthrough/Writeup:&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://app.hackthebox.com/machines/Strutted&#34;  target=&#34;_blank&#34; rel=&#34;noreferrer nofollow&#34;&gt;https://app.hackthebox.com/machines/Strutted&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;how-i-use-variables-and-wordlists&#34;&gt;How I use variables &amp;amp; Wordlists:&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Variables&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;In my commands you are going to see me use &lt;code&gt;$box&lt;/code&gt;, &lt;code&gt;$user&lt;/code&gt;, &lt;code&gt;$hash&lt;/code&gt;, &lt;code&gt;$domain&lt;/code&gt;, &lt;code&gt;$pass&lt;/code&gt; often.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;I find the easiest way to eliminate type-os &amp;amp; to streamline my process it is easier to store important information in variables &amp;amp; aliases.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;$box&lt;/code&gt; = The IP of the box&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;$pass&lt;/code&gt; = Passwords I have access to.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;$user&lt;/code&gt; = current user I am enumerating with.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Depending on where I am in the process this can change if I move laterally.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;$domain&lt;/code&gt; = the domain name e.g. &lt;code&gt;sugarape.local&lt;/code&gt; or &lt;code&gt;contoso.local&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;$machine&lt;/code&gt; = the machine name e.g. &lt;code&gt;DC01&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Why am I telling you this? People of all different levels read these writeups/walkthroughs and I want to make it as easy as possible for people to follow along and take in valuable information.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Wordlists&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>RedPanda HTB Walkthrough: Spring Boot, SSTI, and Privilege Escalation</title>
      <link>http://localhost:1313/walkthroughs/redpanda-box/</link>
      <pubDate>Sun, 12 Jan 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/walkthroughs/redpanda-box/</guid>
      <description>&lt;h2 id=&#34;redpanda-hack-the-box-walkthrough-writeup&#34;&gt;RedPanda Hack The Box Walkthrough/Writeup:&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://app.hackthebox.com/machines/RedPanda&#34;  target=&#34;_blank&#34; rel=&#34;noreferrer nofollow&#34;&gt;https://app.hackthebox.com/machines/RedPanda&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;how-i-use-variables-and-wordlists&#34;&gt;How I Use Variables &amp;amp; Wordlists:&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Variables&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;In my commands you are going to see me use &lt;code&gt;$box&lt;/code&gt;, &lt;code&gt;$user&lt;/code&gt;, &lt;code&gt;$hash&lt;/code&gt;, &lt;code&gt;$domain&lt;/code&gt;, &lt;code&gt;$pass&lt;/code&gt; often.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;I find the easiest way to eliminate type-os &amp;amp; to streamline my process it is easier to store important information in variables &amp;amp; aliases.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;$box&lt;/code&gt; = The IP of the box&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;$pass&lt;/code&gt; = Passwords I have access to.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;$user&lt;/code&gt; = current user I am enumerating with.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Depending on where I am in the process this can change if I move laterally.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;$domain&lt;/code&gt; = the domain name e.g. &lt;code&gt;sugarape.local&lt;/code&gt; or &lt;code&gt;contoso.local&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;$machine&lt;/code&gt; = the machine name e.g. &lt;code&gt;DC01&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Why am I telling you this? People of all different levels read these writeups/walktrhoughs and I want to make it as easy as possible for people to follow along and take in valuable information.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Wordlists&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
