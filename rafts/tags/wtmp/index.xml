<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wtmp on Bloodstiller: Ethical Hacking &amp; Active Directory Security Blog</title>
    <link>http://localhost:1313/tags/wtmp/</link>
    <description>Recent content in Wtmp on Bloodstiller: Ethical Hacking &amp; Active Directory Security Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 20 Jun 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/wtmp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Common Vulnerability Scoring System (CVSS) - Complete Guide</title>
      <link>http://localhost:1313/articles/understandingcvssscoring/</link>
      <pubDate>Fri, 20 Jun 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/articles/understandingcvssscoring/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction:&lt;/h2&gt;&#xA;&lt;p&gt;The Common Vulnerability Scoring System (CVSS) is an industry standard for assessing and communicating the severity of security vulnerabilities. This guide serves as both a comprehensive reference for security professionals and a practical tool for penetration testers.&lt;/p&gt;&#xA;&lt;h3 id=&#34;what-is-cvss&#34;&gt;What is CVSS?&lt;/h3&gt;&#xA;&lt;p&gt;CVSS provides a standardized way to score vulnerabilities on a scale of 0.0 to 10.0, where 10.0 represents the most severe vulnerabilities. The system is maintained by the Forum of Incident Response and Security Teams (FIRST) and is widely adopted across the cybersecurity industry.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Brutus HTB Sherlock Challenge: Analyzing SSH Brute Force Attack Through Linux Logs</title>
      <link>http://localhost:1313/sherlocks/brutus-sherlock/</link>
      <pubDate>Sun, 23 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/sherlocks/brutus-sherlock/</guid>
      <description>&lt;h2 id=&#34;brutus-hack-the-box-sherlock-challenge-writeup&#34;&gt;Brutus Hack The Box Sherlock Challenge Writeup:&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://app.hackthebox.com/sherlocks/Brutus&#34;  target=&#34;_blank&#34; rel=&#34;noreferrer nofollow&#34;&gt;https://app.hackthebox.com/sherlocks/Brutus&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;challenge-information&#34;&gt;Challenge Information:&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Difficulty&lt;/strong&gt;: Very-Easy&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Description&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;In this very easy Sherlock, you will familiarize yourself with Unix &lt;code&gt;auth.log&lt;/code&gt; and &lt;code&gt;wtmp&lt;/code&gt; logs.&lt;/li&gt;&#xA;&lt;li&gt;We&amp;rsquo;ll explore a scenario where a Confluence server was brute-forced via its SSH service.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;After gaining access to the server, the attacker performed additional activities, which we can track using &lt;code&gt;auth.log&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Although &lt;code&gt;auth.log&lt;/code&gt; is primarily used for brute-force analysis, we will delve into the full potential of this artifact in our investigation, including aspects of privilege escalation, persistence, and even some visibility into command execution.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;challenge-files&#34;&gt;Challenge Files:&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Files Provided&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;auth.log&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;wtmp&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;In this writeup, we&amp;rsquo;ll investigate a security incident on a Confluence server that was compromised through its SSH service. We&amp;rsquo;ll analyze two critical log files - &lt;code&gt;auth.log&lt;/code&gt; and &lt;code&gt;wtmp&lt;/code&gt; - to reconstruct the attack timeline and understand the attacker&amp;rsquo;s actions.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
